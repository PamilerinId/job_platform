"""update applications table

Revision ID: ab758d4d6208
Revises: 93f93d107f3f
Create Date: 2023-08-02 23:07:41.695447

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'ab758d4d6208'
down_revision = '93f93d107f3f'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('jobs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('slug', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('type', sa.Enum('FULL_TIME', 'PART_TIME', 'CONTRACT', name='jobtype'), nullable=False),
    sa.Column('experienceLevel', sa.Enum('INTERN', 'ENTRY', 'JUNIOR', 'INTERMEDIATE', 'SENIOR', name='experiencelevel'), nullable=False),
    sa.Column('status', sa.Enum('DRAFT', 'ACTIVE', 'PAUSED', 'CLOSED', name='jobstatus'), nullable=False),
    sa.Column('location', sa.String(), nullable=False),
    sa.Column('locationType', sa.Enum('ONSITE', 'REMOTE', 'HYBRID', name='locationtype'), nullable=False),
    sa.Column('qualifications', postgresql.ARRAY(sa.Enum('NONE', 'BACHELORS', 'OND', 'HND', 'NCE', 'MASTERS', 'DOCTORAL', 'PHD', 'OTHER', name='qualification')), nullable=False),
    sa.Column('salaryRangeFrom', sa.Integer(), nullable=False),
    sa.Column('salaryRangeTo', sa.Integer(), nullable=False),
    sa.Column('currency', sa.Enum('NGN', 'USD', name='currency'), nullable=True),
    sa.Column('skills', postgresql.ARRAY(sa.String()), nullable=False),
    sa.Column('benefits', postgresql.ARRAY(sa.String()), nullable=False),
    sa.Column('deadline', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('tags', postgresql.ARRAY(sa.Text()), nullable=False),
    sa.Column('company_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_job_tags', 'jobs', ['tags'], unique=False, postgresql_using='gin')
    op.create_table('applications',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'SHORTLISTED', 'INTERVIEWING', 'HIRED', 'REJECTED', name='applicationstatus'), server_default='PENDING', nullable=False),
    sa.Column('job_id', sa.UUID(), nullable=True),
    sa.Column('applicant_id', sa.UUID(), nullable=True),
    sa.Column('comment', sa.Text(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['applicant_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('applications')
    op.drop_index('ix_job_tags', table_name='jobs', postgresql_using='gin')
    op.drop_table('jobs')
    # ### end Alembic commands ###
